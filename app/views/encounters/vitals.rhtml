<style>

#tt_page_select_vital_signs .inputFrameClass {                    
  height: 560px;                                                          
}                                                                         
                                                              
#tt_page_select_vital_signs .options {                            
  height: 21.9em;                                                           
}     

#tt_page_life_threatening_condition .inputFrameClass {
  height: 480px;
}

#tt_page_life_threatening_condition .options {
  height: 17em;
}



#tt_page_select_triage_category .inputFrameClass {
  height: 11em;
}

#tt_page_select_triage_category .options {
  height: 17em;
}

/* ................................ */

#summary_container {                                                   
    bottom: 124px;                                                              
    font-size: 20px;                                                            
    left: 25px;                                                                 
    position: absolute;                                                         
    z-index: 600;                                                               
    border-radius: 10px 10px 10px 10px;                                         
    width: 47.2em;                                                                 
    border-style: solid;                                                        
    border-width: 1px;                                                          
    background-color: lightgrey;                                                
    display: none;
    -moz-user-select: none;
    height: 18em;
    overflow: auto;
  }                                                                             
                                                                                
  .summary {
    font-size: 27px;
    padding-left: 15px;
  }

  .data {
    color: white;
    font-size: 25px;
  }

  .header {
    font-size: 27px;
    color: white;
    padding-left: 30px;
    border-style: solid;
    border-width: 0px 0px 1px 0px;
  }

</style>

<script>
  var tt_cancel_destination = "/patients/show/<%= @patient.patient_id %>";
  
  function getSelected(){
    var choices = "";

    for(var o = 0; o < __$('choice').options.length; o++){
      if(__$('choice').options[o].selected == true){
        choices += __$('choice').options[o].innerHTML + " ";
      }
    }

    return choices;
  }
  
  function getComplaints(){
    var complaints = "";

    for(var o = 0; o < $('multiple').options.length; o++){
      if($('multiple').options[o].selected == true){
        complaints += $('multiple').options[o].innerHTML + " ";
      }
    }

    return complaints;
  }
  
  function calculateBP(pos){
    var bp;

    if(!$('bp')){
      var div = document.createElement("div");
      div.id = "bp";
      div.className = "statusLabel";

      $("inputFrame" + tstCurrentPage).appendChild(div);
    }

    if(pos == 1){
      bp = ($("touchscreenInput" + tstCurrentPage).value.trim().length > 0 ? $("touchscreenInput" +
        tstCurrentPage).value.trim() : "?") +
        "/" + ($("diastolic_blood_pressure").value.trim().length > 0 ? $("diastolic_blood_pressure").value.trim() : "?");
    } else if(pos == 2){
      bp = ($("systolic_blood_pressure").value.trim().length > 0 ? $("systolic_blood_pressure").value.trim() : "?") +
        "/" + ($("touchscreenInput" + tstCurrentPage).value.trim().length > 0 ? $("touchscreenInput" +
        tstCurrentPage).value.trim() : "?");
    }

    $("bp").innerHTML = "Blood Pressure: <i style='font-size: 1.2em; float: right;'>" + bp + "</i>";

    timedEvent = setTimeout('calculateBP(' + pos + ')', 500);
  }
  


  /* starts */


   function showSelectedConditions() {                                                      
      var conditions = [];

      if ($('avpu').value.length > 0)
        conditions.push("AVPU: " + $('avpu').value);

      if ($('weight').value.length > 0)
        conditions.push("Weight: " + $('weight').value);

      
      if ($('temperature').value.length > 0)
        conditions.push("Temperature: " + $('temperature').value);

      if($('systolic_blood_pressure').value.length > 0 && $('diastolic_blood_pressure').value.length > 0){
        conditions.push("BP: " + $('systolic_blood_pressure').value +"/"+ $('diastolic_blood_pressure').value);
      }

      if ($('respiratory_rate').value.length > 0)
        conditions.push("Respiratory rate: " + $('respiratory_rate').value);

      if ($('pulse').value.length > 0)
        conditions.push("Pulse: " + $('pulse').value);

      if ($('oxygen').value.length > 0)
        conditions.push("Oxygen: " + $('oxygen').value);

      if ($('life threatening condition').value.length > 0)
        conditions.push("Life threatening condition: " + $('life threatening condition').value);



      var container = $("summary_container");                      
      var html = "<div class='summary'>" 
      html = "<ul>"                                                          
      for(var i=0;i < conditions.length;i++) {                        
        if (conditions[i].length > 0)
          html += "<li class='data'>" + conditions[i] + "</li>";                          

      }                                                                       

      for(var i=0;i < selected_complaints.length;i++) {                        
        if (selected_complaints[i].length > 0)
          html += "<li class='data'>" + selected_complaints[i] + "</li>";                          
        
      }                                                                       

      html += "</ul>"                                                        
      html += "</div>"                                                        
      container.innerHTML = "<br /><div class='header' id = 'header'>Summary</div>";                                                     
      container.innerHTML += html                                   
      triageSelect = triage();

      if(triageSelect == 'EMERGENCY'){
        container.style.background = 'red';
        setTimeout("selectTriageCategory('Emergency')",1000);
        $('header').innerHTML = "Summary (IMMEDIATE ACTION NECESSARY)"
        $('header').style.color = 'white';
        list = document.getElementsByClassName('data');
        for(var x = 0;x < list.length; x++ ) {
          list[x].style.color = 'white';
        }
      }else if (triageSelect == 'PRIORITY'){
        container.style.background = 'yellow';
        setTimeout("selectTriageCategory('Priority')",1000);
        $('header').innerHTML = "Summary (TO BE SEEN WITHIN 1 HOUR)"
        $('header').style.color = 'black';
        list = document.getElementsByClassName('data');
        for(var x = 0;x < list.length; x++ ) {
          list[x].style.color = 'black';
        }
      }else{
        container.style.background = 'green';
        setTimeout("selectTriageCategory('Queue')",1000);
        $('header').innerHTML = "Summary (TO BE SEEN WITHIN 4 HOURS)"
        $('header').style.color = 'white';
        list = document.getElementsByClassName('data');
        for(var x = 0;x < list.length; x++ ) {
          list[x].style.color = 'white';
        }
      }
      container.style.display = "inline";                          
    }  

    function selectTriageCategory(category) {
      var options = document.getElementsByTagName("li");
      for(var i = 0; i < options.length; i++){
        if(options[i].innerHTML == category){
          updateTouchscreenInputForSelect(options[i]);
          break
        }
      }
    }


    function triage() {

      if ($('avpu').value.length > 0) {
        avpu = $('avpu').value;
        if (avpu =='Unresponsive') {
          return 'EMERGENCY'
        }
      }

      if ($('temperature').value.length > 0) {
        temp = parseFloat($('temperature').value);
        if (temp > 40 || temp < 34) {
          return 'EMERGENCY'
        }
      }

      /*if ($('temperature').length > 0) {
        temp = parseFloat($('temperature').value);
        if (temp > 40 || temp < 34) {
          return 'EMERGENCY'
        }
      }*/
      
      if($('systolic_blood_pressure').value.length > 0){
        sbp = parseFloat($('systolic_blood_pressure').value);
        if (sbp > 220 || sbp < 80) {
          return 'EMERGENCY'
        }
      }
      
      if($('diastolic_blood_pressure').value.length > 0){
        dbp = parseFloat($('diastolic_blood_pressure').value);
        if (dbp > 130) {
          return 'EMERGENCY'
        }
      }
      
      if($('respiratory_rate').value.length > 0){
        respiratory_rate = parseFloat($('respiratory_rate').value);
        if (respiratory_rate > 30 || respiratory_rate < 8) {
          return 'EMERGENCY'
        }
      }
      
      if($('pulse').value.length > 0){
        pulse = parseFloat($('pulse').value);
        if (pulse > 130 || pulse < 40) {
          return 'EMERGENCY'
        }
      }
      
      if($('oxygen').value.length > 0){
        oxygen = parseFloat($('oxygen').value);
        if (oxygen < 90) {
          return 'EMERGENCY'
        }
      }
      
      if($('life threatening condition').value.length > 0){
        ltc = $('life threatening condition').value;
        if (ltc != 'None' && ltc != 'Other') {
          return 'EMERGENCY'
        }
      }

     
      /*  ..................... */


      if ($('avpu').value.length > 0) {
        avpu = $('avpu').value;
        if (avpu =='Voice' || avpu == 'Generalised body Pains') {
          return 'PRIORITY'
        }
      }


      if ($('temperature').value.length > 0) {
        temp = parseFloat($('temperature').value);
        if (temp > 38 || temp < 35.5) {
          return 'PRIORITY'
        }
      }

      /*if ($('temperature').length > 0) {
        temp = parseFloat($('temperature').value);
        if (temp > 40 || temp < 34) {
          return 'EMERGENCY'
        }
      }*/
      
      if($('systolic_blood_pressure').value.length > 0){
        sbp = parseFloat($('systolic_blood_pressure').value);
        if (sbp > 180 || sbp < 90) {
          return 'PRIORITY'
        }
      }
      
      if($('diastolic_blood_pressure').value.length > 0){
        dbp = parseFloat($('diastolic_blood_pressure').value);
        if (dbp > 110) {
          return 'PRIORITY'
        }
      }
      
      if($('respiratory_rate').value.length > 0){
        respiratory_rate = parseFloat($('respiratory_rate').value);
        if (respiratory_rate > 20 || respiratory_rate < 12) {
          return 'PRIORITY'
        }
      }
      
      if($('pulse').value.length > 0){
        pulse = parseFloat($('pulse').value);
        if (pulse > 110 || pulse < 50) {
          return 'PRIORITY'
        }
      }
      
      if($('oxygen').value.length > 0){
        oxygen = parseFloat($('oxygen').value);
        if (oxygen < 92) {
          return 'PRIORITY'
        }
      }	


     /* .......................... */




     
     
      for(var i=0;i < selected_complaints.length;i++) {                         
        if (selected_complaints[i] == 'Snike bite (Bites)')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'Major (Burns)')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'Snake bite (Bites)')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'PV bleeding (Pregnancy)')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'Major (Trauma)')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'Violent behaviour')                                  
          return 'EMERGENCY'
       
        if (selected_complaints[i] == 'Severe (Shortness of breath)')                                  
          return 'EMERGENCY'

      }  
     
      for(var i=0;i < selected_complaints.length;i++) {                         
        //alert(selected_complaints[i])
        if (selected_complaints[i] == 'Active bleeding')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Chest pain')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Focal neurologic deficit')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Lower limb (Fracture)')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Pelvis limb (Fracture)')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Rib (Fracture)')                                  
          return 'PRIORITY'
       
        if (selected_complaints[i] == 'Skull (Fracture)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Spine (Fracture)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Upper limb (Fracture)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Severe (Head injury)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Unconscious (Head injury)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Medication history (Convulsions)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Minor (Burns)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Iron posioning (Poisioning)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Organophosphate posioning (Poisioning)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Other (Poisioning)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Paraffin (Poisioning)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Abdominal pain (Pregnancy)')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Pain')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Sexual assualt')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Visual changes')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Body swelling')                                  
          return 'PRIORITY'

        if (selected_complaints[i] == 'Weakness')                                  
          return 'PRIORITY'

      }  
     


      return 'QUEUE';
    }


    var selected_complaints = [];

    function unLoadSelectedComplaints() {
      selected_complaints = [];
    }

    function LoadSelectedComplaints() {
      complaints = $('touchscreenInput'+tstCurrentPage).value.split(';');
      for(var i = 0 ; i < complaints.length; i++) {
        selected_complaints.push(complaints[i]);
      } 
    }

  /* end */

</script>

<form action="/encounters/create_complaints">
	<%= hidden_field_tag "encounter[encounter_type_name]", "VITALS" %>
	<%= hidden_field_tag "encounter[patient_id]", @patient.id %>
	<%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
	<%= hidden_field_tag "encounter[provider_id]", current_user.person_id %>

  <%
    vital_signs = ["","Temperature","Respiratory Rate","Blood Pressure","AVPU", 
    "Pulse Rate", "Weight", "Height","Oxygen Saturation","Presenting complaints"]
  %>

	<%= select_tag "choice", options_for_select(vital_signs.sort), 
		{	:helpText => 'Select vital signs', 
			:id => "choice", 
			:multiple => true } %>

  <%= touch_select_tag "AVPU", @patient, concept_set_options('AVPU'),
    {
    :helpText => 'AVPU',
    :id => 'avpu',
    :condition => "getSelected().match(/AVPU/i)"
  } %>

	<%= touch_text_field_tag "TEMPERATURE (C)", @patient, nil,
		{	:id => "temperature",
			:field_type => 'number',
			:helptext =>"Temperature (<sup>o</sup>C)",
			:allowFreeText => 'true',
			:condition => "getSelected().match(/TEMPERATURE/i)",
			:min => 35,
			:max => 41,
			:units => 'Degrees Celcius',  
			:validationRule => "([0-9]+\\.[0-9])|Unknown$",
			:validationMessage => "You must enter a decimal between 0 and 9 (for example: 36<b>.6</b>)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal" } %>

	<%= touch_text_field_tag "RESPIRATORY RATE", @patient,  nil,
		{	:id => "respiratory_rate",
			:field_type => 'number',
			:helptext => 'Respiratory Rate (Breaths per Minute)',
			:min => 8,
			:max => 65,
                        :tt_onLoad => "$('decimal').style.display='none'",
                        :tt_onUnLoad => "$('decimal').style.display=''",
			:condition => "getSelected().match(/RESPIRATORY\sRATE/i)",
			:absoluteMin => 0,
			:absoluteMax => 250,
			:validationRule => "([0-9]+(\\.[0-9])?)|Unknown$",
			:validationMessage => "You must enter a decimal between 0 and 9 (for example: 37<b>.6</b>)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal"} %>

	<%= touch_text_field_tag "SYSTOLIC BLOOD PRESSURE", @patient, nil,
		{	:id => "systolic_blood_pressure",
			:helptext => "Systolic Blood Pressure (?/Y)",
			:field_type => "number",
                        :absoluteMin => 50,
			:absoluteMax => 240,
			:tt_pageStyleClass => "NumbersWithUnknown",
			:tt_onLoad => "timedEvent = setTimeout('calculateBP(1)', 100);",
			:tt_onUnLoad => "clearTimeout(timedEvent);",
			:condition => "getSelected().match(/BLOOD\sPRESSURE/i)",
			:absoluteMin => 0,
			:max => 250 } %>

	<%= touch_text_field_tag "DIASTOLIC BLOOD PRESSURE", @patient, nil,
		{	:id => "diastolic_blood_pressure",
			:helptext => "Diastolic Blood Pressure",
			:field_type => "number",
			:tt_pageStyleClass => "NumbersWithUnknown",
			:tt_onLoad => "timedEvent = setTimeout('calculateBP(2)', 100);",
			:tt_onUnLoad => "clearTimeout(timedEvent);",
			:condition => "getSelected().match(/BLOOD\sPRESSURE/i)",
			:absoluteMin => 35,
			:absoluteMax  => 140 } %>

	<%= touch_text_field_tag "PULSE", @patient, nil,
		{	:id => "pulse",
			:helptext => 'Pulse Rate (Beats per Minute)',
			:field_type => 'number',
			:min => 50,
			:max => 120,
			:condition => "getSelected().match(/PULSE\sRATE/i)",
			:units => 'bpm',
			:validationRule => "([0-9]+)|Unknown$",
			:validationMessage => "You must enter a number between 0 and 9 (for example: 54)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal" } %>

	<%= touch_text_field_tag "WEIGHT (KG)", @patient, nil,
		{	:id => "weight",
			:field_type => 'number',
			:helptext => 'Weight (KG)',
			:min => number_with_precision(@min_weight, :precision => 1),
			:max => number_with_precision(@max_weight, :precision => 1),
			:condition => "getSelected().match(/WEIGHT/i)",
			:absoluteMin => 0,
			:absoluteMax => 250,
			:units => 'kg',
			:validationRule => "([0-9]+(\\.[0-9])?)|Unknown$",
			:validationMessage => "You must enter a number between 0 and 9 (for example: 54<b>.6</b>)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal" } %>

	<%= touch_text_field_tag "HEIGHT (CM)", @patient, nil,
		{	:id => "height",
			:helptext => "Height (CM)",
			:field_type => 'number',
			# :min => number_with_precision(@patient.min_height, :precision => 1),
			# :max => number_with_precision(@patient.max_height, :precision => 1),
			:condition => "getSelected().match(/HEIGHT/i)",
			:min => 50,
			:max => 180,
			:units => 'cm',
			:validationRule => "([0-9]+(\\.[0-9])?)|Unknown$",
			:validationMessage => "You must enter a number between 0 and 9 (for example: 154<b>.6</b>)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal" } %>

	<%= touch_text_field_tag "BLOOD OXYGEN SATURATION", @patient, nil,
		{	:id => "oxygen",
			:helptext => 'Blood Oxygen Saturation (%)',
			:field_type => 'number',
			:min => 85,
			:max => 100,
			:condition => "getSelected().match(/OXYGEN\sSATURATION/i)",
			#:absoluteMin => 0,
			#:absoluteMax => 250,
			:validationRule => "([0-9]+(\\.[0-9])?)|Unknown$",
			:validationMessage => "You must enter a number between 0 and 9 (for example: 54<b>.6</b>)",
			:tt_pageStyleClass => "Numeric NumbersWithUnknownAndDecimal"} %>




  <!--   start -->



    <table cellpadding=5>
          <tr>
            <td>
            </td>
            <td>
              <select class = "multi" style="width: 100%" 
                      name="complaints[]" id="multiple"
                      helptext="Select Complaint(s)" 
                      tt_onUnLoad = "LoadSelectedComplaints()"
                      tt_onLoad = "unLoadSelectedComplaints()"
                      condition = "getSelected().match(/PRESENTING COMPLAINTS/i)"
                      multiple="multiple" nested="true" >
                <option></option>
                <%complaints_set = concept_set('presenting complaint')%>
                <%if complaints_set%>
                  <%complaints_set.sort.each do |concept|%>
                    <%if concept_set(concept).size > 0 %>
                      <optgroup id ="<%=concept%>" label="<%=concept%>">
                        <%complaint_sub_set = concept_set(concept)%>
                        <%if complaint_sub_set %>
                          <%complaint_sub_set.sort.each do |value|%>
                            <option id ="<%=value%>$<%=concept%>" value="<%=concept%>:<%=value%>"><%=value%> <%= '('%><%= concept %><%= ')'%></option>
                          <%end%>
                        <%end%>
                      </optgroup>
                    <%else%>
                      <option id ="<%=concept%>"><%=concept%></option>
                    <%end%>
                  <%end%>
                <%end%>
              </select>
            </td>
          </tr>
        </table>
        <%= touch_text_area_tag "SPECIFIC PRESENTING COMPLAINT", @patient, nil,
          { :id => "other",
          :optional => true,
          :condition => "getSelected().match(/PRESENTING COMPLAINTS/i)",
          :helpText => "Specific Presenting complaint (optional)"
        }%>
        <%= touch_select_tag "Life threatening condition", @patient, nil,
          { :ajaxURL => "/encounters/life_threatening_condition?search_string=",
          :helpText => 'Life Threatening Condition',
          :id => 'life threatening condition',
          :tt_onLoad =>"document.getElementById('keyboard').style.display = 'none';"
        } %>

        <%= touch_select_tag "triage category", @patient, options_for_select([]),
          { :ajaxURL => "/encounters/triage_category?search_string=",
          :helpText => "Select Triage Category",
          :tt_onUnLoad => "document.getElementById('summary_container').style.display = 'none'",
          :tt_onLoad =>"clearInput();document.getElementById('keyboard').style.display = 'none';showSelectedConditions();",
          :id => 'triage_category'} %>


<!-- end -->

	<% if @retrospective %>
		<p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
		<%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
	<% else %>
		<%= hidden_field_tag "filter[provider]", nil %>
	<% end %>
		
	<%= submit_tag "Finish" %>    
</form>

  <div id = "summary_container">                                           
   am here
  </div>
