<script language="javascript" type="text/javascript" src="/javascripts/jquery.js"></script>
<style>
  .tt_controls_new_state_start_date #num , #Unknown {
    display:none;
  }

  .tt_controls_new_outcome .keyboard { display: none !important; }
</style>

<script>
  var tt_cancel_destination = "/patients/programs_dashboard/<%= @patient.patient_id %>"
  var program_date_completed = "<%= @program_date_completed %>"

  var current_state_input_box = null
  function set_workflow_for_states() {
    var workflow_id = <%= @program_workflow_id %>
    var current_state = '<%=@current_state%>'
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/programs/states?workflow=" + workflow_id + "&original_state=" + current_state + "&current_state=" + current_state);
    current_state_input_box = $('touchscreenInput'+tstCurrentPage)
    listSuggestions(tstCurrentPage); 
  }

  function validProgram(){
    selected_state = ($('tt_page_new_state').getElementsByTagName("input")[0].value)
    if(program_date_completed != ""){return false}
    return true
  } 

  function validStartDate(){
    closed_states = '<%= @invalid_date_ranges %>'
    set_start_date = dateCreate($('tt_page_new_state_start_date').getElementsByTagName("input")[0].value)
    
    if (closed_states == '')
      return true
    
    dates = closed_states.split(',')
    return_str = true
    for (i = 0 ; i < dates.length ; i++) {
      start_date = dateCreate(dates[i].split(':')[0])
      end_date = dateCreate(dates[i].split(':')[1])
      if (set_start_date >= start_date && set_start_date < end_date)
        return_str = false
      
    }
    return return_str
  } 

  function dateCreate(date_str){
    intyear = 0 ; intmonth = 0 ; intday = 0;
    intyear = parseInt(date_str.substring(0,4))
    intmonth = (parseInt(date_str.substring(5,7)) - 1)
    intday = (parseInt(date_str.substring(8,10)))

    if (intmonth == -1)
      intmonth = (parseInt(date_str.substring(5,7).substring(1,2)) - 1)

    if (intday == 0)
      intday = parseInt(date_str.substring(8,10).substring(1,2))

    return new Date(intyear,intmonth,intday)
  }
  
  
	function generateExitFromCareForm() {
    submitForm = document.createElement("FORM");
    submitForm.setAttribute("type","hidden");
    submitForm.setAttribute("id","exit_from_care");
    submitForm.method = "POST";
    document.body.appendChild(submitForm);
       
    newElement = document.createElement("input")
    newElement.setAttribute("name","encounter[patient_id]")
    newElement.setAttribute("id","encounter_patient_id");
    newElement.setAttribute("type","hidden");
    newElement.value = "<%=@patient.id %>";
    submitForm.appendChild(newElement);
    
    newElement = document.createElement("input")
    newElement.setAttribute("name","encounter[encounter_type_name]")
    newElement.setAttribute("id","encounter_encounter_type_name");
    newElement.setAttribute("type","hidden");
    newElement.value = "EXIT FROM CARE";
    submitForm.appendChild(newElement);

    newElement = document.createElement("input")
    newElement.setAttribute("name","observations[][concept_name]")
    newElement.setAttribute("id","observations__concept_name");
    newElement.setAttribute("type","hidden");
    newElement.value = "Reason for exiting care";
    submitForm.appendChild(newElement);

    newElement = document.createElement("input")
    newElement.setAttribute("name","observations[][patient_id]")
    newElement.setAttribute("id","observations__patient_id");
    newElement.setAttribute("type","hidden");
    newElement.value = "<%=@patient.id %>";
    submitForm.appendChild(newElement);

    newElement = document.createElement("input")
    newElement.setAttribute("name","observations[][obs_datetime]")
    newElement.setAttribute("id","observations__obs_datetime");
    newElement.setAttribute("type","hidden");
    newElement.value =  "<%= DateTime.now()%>";
    submitForm.appendChild(newElement);
    
    newElement = document.createElement("input")
    newElement.setAttribute("name","observations[][value_coded_or_text]")
    newElement.setAttribute("id","observations__value_coded_or_text");
    newElement.setAttribute("type","hidden");
    newElement.value = document.getElementById('place_of_death').value;
    submitForm.appendChild(newElement);
    
    newElement = document.createElement("input")
    newElement.setAttribute("name","encounter[provider_id]")
    newElement.setAttribute("id","encounter_provider_id");
    newElement.setAttribute("type","hidden");
    newElement.value = "<%=current_user.person_id%>";
    submitForm.appendChild(newElement)

    newElement = document.createElement("input")
    newElement.setAttribute("name","encounter[encounter_datetime]")
    newElement.setAttribute("id","encounter_encounter_datetime");
    newElement.setAttribute("type","hidden");
    newElement.value = "<%= DateTime.now()%>";
    submitForm.appendChild(newElement);
    
    submitForm.appendChild(newElement);
    submitForm.action= "/encounters/create";
	}
  
  function prepareExitFromCareForm() {
  (function($) {
		//	$(document).ready( function() {
				generateExitFromCareForm();
				var form = $('#exit_from_care');
					$.ajax( {
						type: "POST",
						url: form.attr( 'action' ),
						data: form.serialize(),
						success: function( response ) {
						  //console.log( response );
						}
					} );
	//		} ); 
		})(jQuery);
  }
	
	function submitExitFromCareForm(){
		if (selectedValue('initial_state').toUpperCase() == "PATIENT DIED") {
			prepareExitFromCareForm();
		}
		document.getElementById('program').submit();
	}
	
	function setFinishButtonToSubmitExitFromCareForm() {
		if(selectedValue('initial_state').toUpperCase() == 'PATIENT DIED') {
			document.getElementById('nextButton').setAttribute("onmousedown","submitExitFromCareForm()");
		}
	}
</script>
<form id='program' action="/programs/update" method = 'post'>
  <%= hidden_field_tag :patient_id, @patient.id %>
  <%= hidden_field_tag :patient_program_id, @patient_program_id %>
  <%= hidden_field_tag :location_id, Location.current_health_center.id %>

  <%= select_tag 'current_state', params[:current_state],
      {:id => 'initial_state',
       :field_type => 'alpha',
       :helpText => "New outcome",
       :tt_onLoad => "resetNextButtonCaption();set_workflow_for_states();", 
       :ajaxURL => "",
       :validationJS =>"validProgram()",
       :validationMessage => "#{@program_name}<br/>is closed<br/>Closed on: #{@program_date_completed}",
       :tt_pageStyleClass => "NoKeyboard",
       :allowFreeText => false } %>

  <% initial_date = "#{session[:datetime].strftime('%Y-%m-%d')}" rescue "#{(Date.today).strftime('%Y-%m-%d')}"%>

  <%= text_field_tag 'current_date', initial_date,
        {:id => 'current_date',
         :field_type => 'date',
         :tt_onLoad => "changeNextButtonCaption()",
         :helpText => "New outcome start date",
         :max => "#{(Date.today).strftime('%Y-%m-%d')}",
         :validationJS =>"validStartDate()",
         :validationMessage => "Start date is overlapping with other states start dates",
         :tt_pageStyleClass => "Date DatesOnly"} %>

  <script>
    function resetNextButtonCaption(){
      $('nextButton').innerHTML = "<span>Next</span>";
    }

    function changeNextButtonCaption(){
      if((current_state_input_box.value.toUpperCase() != 'PATIENT TRANSFERRED OUT') && (current_state_input_box.value.toUpperCase() != 'REFERRED TO ANOTHER FACILITY')){
        $('nextButton').innerHTML = "<span>Finish</span>";
      }
    }
    
    function resetNextButtonCaption(){
      $('nextButton').innerHTML = "<span>Next</span>";
    }

    function changeNextButtonText(){
      if((current_state_input_box.value.toUpperCase() == 'REFERRED TO ANOTHER FACILITY')){
        $('nextButton').innerHTML = "<span>Finish</span>";
      }
    }
  </script>

	<%= touch_select_tag "Reason for exiting care", @patient, concept_set_options("Place of Death"),
		{
			:id => "place_of_death",
			:multiple => false,
    	:condition => "(selectedValue('initial_state').toUpperCase() == 'PATIENT DIED')",
    	:tt_onLoad => "changeNextButtonCaption();setFinishButtonToSubmitExitFromCareForm()",
			:helpText => 'Place where death occured'
		} %>

  <%= select_tag 'transfer_out_location_id', nil,
      {:id => 'transfer_out_location_id',
       :field_type => 'alpha',
       :helpText => "Referral out facility",
       :ajaxURL => '/programs/locations?q=',
       :tt_onLoad => "changeNextButtonText();",
       :condition => "current_state_input_box.value.toUpperCase() == 'REFERRED TO ANOTHER FACILITY'",
       :allowFreeText => true } %>

  <%= select_tag 'transfer_out_location_id', nil,
      {:id => 'transfer_out_location_id',
       :field_type => 'alpha',
       :helpText => "Transfer out to location",
       :ajaxURL => '/programs/locations?q=',
       :condition => "current_state_input_box.value.toUpperCase() == 'PATIENT TRANSFERRED OUT'",
       :allowFreeText => true } %>
       
  <%= touch_yes_no_unknown_tag "TRANSFER WITHIN RESPONSIBILITY", @patient, nil,
      {:id => "transfer_within_responsibility",
       :optional => false,
       :condition => "current_state_input_box.value.toUpperCase() == 'PATIENT TRANSFERRED OUT'",
       :helpText => "Transfer within responsibility (e.g. District)" } %>


  <%= hidden_field_tag "encounter[encounter_type_name]", "TRANSFER OUT" %>
  <%= hidden_field_tag "encounter[patient_id]", @patient.id %>
  <%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
  <%= hidden_field_tag "encounter[provider_id]", current_user.person_id %>
</form>

